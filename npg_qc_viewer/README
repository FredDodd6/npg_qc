Running your own development server:
------------------------------------

Current Build script will set the project ready for running the server.

The Build scripts needs ENV variables to build:
  
  PATH     - pointing to Perl (currently v5.16.3 is supported) and 
             NodeJS (v0.12.1) with npm (v2.5.1)
                          
  PERL5LIB - for npg libraries and CPAN libraries
  
In case there is a CATALYST_HOME variable, it needs to be unset.
  
  $ unset CATALYST_HOME
  
The project uses bower to manage dependencies, if not available, install with

  $ npm install -g bower
  
Updating and running the Build script should install JS dependencies with
bower.

  $ perl Build.PL --installjsdeps && ./Build

If you are including a working copy of bcviz (not yet official release) 
use bower to configure the linking

  - In bcviz (your working copy)

    $ bower link

  - In npg_qc
    
    # in the npg_qc_viewer folder
    $ pushd root/static && bower link bcviz && popd

If needed, edit the decryption_key value in npg_qc_viewer.conf

  # in the npg_qc_viewer folder
  $ perl bin/npg_qc_viewer_server.pl -p YOUR_PORT

  CATALYST_DEBUG=1 to enable debugging

  CATALYST_AUTOCRUD=1 to enable the autocrud plugin

  autocrud pages - npg tracking:
  read-only: autocrud/npgdb
  admin:     autocrud/site/admin/schema/npgdb

Building and testing Perl modules
---------------------------------

The Build scripts needs ENV variables to build:

  PATH     - pointing to Perl (currently v5.16.3 is supported) and 
             NodeJS (v0.12.1) with npm (v2.5.1)
  PERL5LIB - for npg libraries and cpan libraries
  
In case there is a CATALYST_HOME variable, it needs to be unset.
  
  $ unset CATALYST_HOME

Updating and running the Build script should install JS dependencies with
bower.

  # in the npg_qc_viewer folder
  # Building
  $ perl Build.PL --installjsdeps && ./Build 
  
  # Testing
  $ TEST_AUTHOR=1 ./Build test
  # or
  $ CATALYST_DEBUG=0  TEST_AUTHOR=1 prove -vl t

Testing Javascript for npg_qc_viewer
------------------------------------

Headless testing:

Build the project following the steps described in the first section.

Install node package dependencies if they are not available.

  $ npm install -g node-qunit-phantomjs

Running the tests

  $ pushd root/static 
  $ node-qunit-phantomjs test/test.html --verbose
  $ node-qunit-phantomjs test/test_format_for_csv.html --verbose
  $ node-qunit-phantomjs test/test_modify_on_view.html --verbose
  $ popd

Testing in browser:

  Open files in a browser window :
    npg_qc_viewer/root/static/test/test.html
    npg_qc_viewer/root/static/test/test_format_for_csv.html
    npg_qc_viewer/root/static/test/test_modify_on_view.html

