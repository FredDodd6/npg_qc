#!/usr/bin/env perl

use strict;
use warnings;
use FindBin qw($Bin);
use lib ( -d "$Bin/../lib/perl5" ? "$Bin/../lib/perl5" : "$Bin/../lib" );
use Carp;

use npg_tracking::glossary::rpt;
use npg_tracking::glossary::composition::factory::rpt_list;
use npg_tracking::glossary::moniker;
use npg_qc::autoqc::checks::review;

our $VERSION = '0';

while (<>) {
  my @columns = split /,/xms;
  my $file_name_root = shift @columns;
  my $outcome        = pop @columns;
  $outcome =~ s/\s+\Z//smx;

  $outcome =~ /\ATRUE|FALSE\z/xsm or croak "Unexpected outcome value '$outcome'";

  my $h = npg_tracking::glossary::moniker->parse_file_name($file_name_root);
  my $rpt = npg_tracking::glossary::rpt->deflate_rpt($h);

  my $r = npg_qc::autoqc::checks::review->new(rpt_list => $rpt);

  my $sname = $r->lims->sample_supplier_name();
  if (!$sname) {
    carp "Skipping $file_name_root, sample supplier name is not set";
    next;
  }
  my ($name_prefix) = $sname =~ /\A([[:upper:]]{4})-/xms;
  if (!$name_prefix || ($name_prefix =~ /\ACGAP\Z/ixms)) {
    carp "Skipping $file_name_root, sample $sname does not belong to Heron";
    next;
  }

  $r->result->pass(int($outcome eq 'TRUE' ? 1 : 0));
  $r->result->qc_outcome($r->generate_qc_outcome('uqc', 'artic-qc'));
  $r->result->library_type($r->lims->library_type);
  my $condition = 'ncov2019-artic-nf QC is TRUE';
  $r->result->evaluation_results({$condition => $r->result->pass});
  $r->result->criteria({'and' => [$condition]});
  $r->result->store();
}

exit 0;

__END__


=head1 NAME

npg_simple_robo4artic

=head1 USAGE


=head1 CONFIGURATION

=head1 SYNOPSIS

This script creates autoqc review result JSON files for
entities and outcomes piped from STDIN. One line of input
produces one file, unless this input is considered irrelevant.

The JSON files are created in the working directory. The
qc oucomes are recorded as user QC.

Example of input:

34014_1#104,1.21,98.61,19221,34014_1#104.primertrimmed.consensus.fa,34014_1#104.mapped.primertrimmed.sorted.bam,TRUE

34014_1#105,87.85,9.91,376,34014_1#105.primertrimmed.consensus.fa,34014_1#105.mapped.primertrimmed.sorted.bam,FALSE

Only the first and the last column of the input is considered.

=head1 DESCRIPTION

=head1 REQUIRED ARGUMENTS

=head1 OPTIONS

=head1 SUBROUTINES/METHODS

=head1 DIAGNOSTICS

=head1 CONFIGURATION AND ENVIRONMENT

=head1 DEPENDENCIES

=over

=item strict

=item warnings

=item FindBin

=item lib

=item Carp

=item  npg_tracking::glossary::rpt

=item npg_tracking::glossary::composition::factory::rpt_list

=item npg_tracking::glossary::moniker

=item npg_qc::autoqc::checks::review

=back

=head1 INCOMPATIBILITIES

=head1 EXIT STATUS

=head1 BUGS AND LIMITATIONS

=head1 AUTHOR

Marina Gourtovaia

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2020 Genome Research Ltd.

This file is part of NPG.

NPG is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

=cut
