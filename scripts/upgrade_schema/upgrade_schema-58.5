# create a new column defaulting to NULL;
ALTER TABLE `bam_flagstats` ADD COLUMN  `subset` varchar(10) default NULL AFTER `human_split`;

# back-populate data from the old column into thr new
UPDATE `bam_flagstats` set subset=human_split where (human_split != 'all' and human_split != 'nonhuman');
UPDATE `bam_flagstats` set subset='target' where subset IS NULL;

# remove default from subset
ALTER TABLE `bam_flagstats` MODIFY COLUMN  `subset` varchar(10);

# drop current unique key
ALTER TABLE `bam_flagstats` DROP KEY `unq_run_lane_index_sp_flag`;
#add new unique key
ALTER TABLE `bam_flagstats` ADD CONSTRAINT UNIQUE  `unq_run_lane_index_subset_flag` (`id_run`,`position`,`tag_index`,`human_split`,`subset`);

# create a trigger to populate the new column so that old data with old software
# can be still loaded
delimiter // \
CREATE TRIGGER bfs_populate_subset BEFORE INSERT ON bam_flagstats \
FOR EACH ROW \
BEGIN \
  DECLARE temp varchar(10) default 'target';
  IF NEW.subset IS NULL THEN \
    IF NEW.human_split IS NOT NULL and NEW.human_split != 'all' THEN \
      SET temp = NEW.human_split; \
    END IF; \
    SET NEW.subset = temp; \
  END IF; \
END // \
delimiter ;

#DROP TRIGGER IF EXISTS bfs_populate_subset; #to remove the trigger when not needed any more






